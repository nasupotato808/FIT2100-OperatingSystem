Task2
// Refer to task2.png and fork2.c

Document your findings for the following:
(a) Locate the child process in the listing and underline its PID;
(b) Put a circle around the parent’s process ID for that child (it’s right next to the PID);
(c) Draw a line from the circled parent’s ID to the PID for that process (find it on a previous
line);
(d) Repeat this for the parent, and its parent, etc., until you reach the process with PID 1.

F S   UID     PID    PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD
1 S  1000   _48258   o48257  0  80   0 -   661 do_wai pts/0    00:00:00 fork2
            _________|
            |
0 S  1000   _48257   o 3807  0  80   0 -   694 do_wai pts/0    00:00:00 fork2
            _________|
            |
0 S  1000   _3807    o 3789  0  80   0 -  2886 do_wai pts/0    00:00:01 bash
            _________|
            |
0 S  1000   _3789    o 1045  0  80   0 - 140017 -     ?        00:01:23 gnome-terminal-
            _________|
            |
4 S  1000   _1045    o    1  0  80   0 -  4951 ep_pol ?        00:00:10 systemd


In addition to your findings above, are there any differences between using exec()
and system()? If there are differences, can you list two of them?
By running exec(), it print the line one by one, and less lines.
Two differences of exec() and system()
1. exec() replaces the current process with a new one, while system() creates a subprocess.
2. exec() is more efficient as it doesn't create a new process.